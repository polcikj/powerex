name: Deploy
on:
  workflow_dispatch
permissions:
  id-token: write
  contents: read
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Git clone the repository
        uses: actions/checkout@v4
      - name: Python Configure
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Python Package
        run : |
          mkdir -p ./iac/modules/lambda/zips/
          cd app
          python3 setup.py sdist
          pip3 install --no-cache-dir \
          --platform manylinux2014_arm64 \
          --target=../python \
          --implementation cp \
          --python-version 3.11 \
          --only-binary=:all: --upgrade \
          -r requirements.txt
          pip3 install .
          zip ../iac/modules/lambda/zips/email_generator_func.zip lambda_function.py
          cd ..
          zip -r ./iac/modules/lambda/zips/email_generator_layer.zip python
      - name: AWS configure credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: arn:aws:iam::${{ vars.AWS_ACCOUNT_ID }}:role/aws-github-role
          role-session-name: aws-github-role
          aws-region: ${{ vars.AWS_REGION }}
      - name: Terraform cache
        uses: actions/cache@v3
        with:
          path: iac/.terraform
          key: ${{ runner.os }}-terraform
      - name:  Terraform Init & Apply
        run: |
          cd iac
          terraform init -reconfigure -backend-config=env/dev.hcl
          terraform apply -target=module.lambda -var-file=env/dev.tfvars -var="region=${{ vars.AWS_REGION }}" -var="bucket_prefix=${{ vars.BUCKET_PREFIX }}" -var="repository=${{ vars.REPOSITORY }}" -auto-approve
